{"version":3,"sources":["utils.js","components/index.js","components/Actions.js","components/Card.js","components/Seat.js","components/Table.js","components/Room.js","components/Lobby.js","components/App.js","index.js"],"names":["i","joinRoomWithReconnect","roomId","sessionId","localStorage","getItem","window","colyseus","reconnect","room","joinById","saveRoom","name","setItem","id","getIsSmall","document","documentElement","clientWidth","clientHeight","getIsLarge","SUITS","VALUES","getHandLabel","player","cards","length","cardsString","map","c","value","suit","hand","concat","Hand","solve","descr","getIsPortrait","formatNumber","n","numeral","format","toUpperCase","Flex","variant","flex","children","style","passedStyles","props","display","test","flexDirection","justifyContent","alignItems","Box","Chips","amount","Chip","label","Actions","blind","currentTurn","currentBet","players","find","p","canMove","activePlayers","filter","inPlay","numPlayers","seatIndex","money","canDeal","dealer","canStand","sendAction","action","rest","send","isAdmin","BottomActions","betAmount","position","top","left","right","zIndex","Button","onClick","removeItem","leave","Action","margin","autoDeal","autoCheck","useState","customBet","setCustomBet","showBetSlider","setShowBetSlider","showAdmin","setShowAdmin","playerTotal","useEffect","setTimeout","bottom","flexWrap","maxWidth","Slider","onChange","event","newValue","aria-labelledby","step","min","max","marginRight","minWidth","Typography","FormControlLabel","control","Checkbox","checked","e","disabled","isBot","Card","card","x","y","scale","classes","className","join","transform","Seat","onSit","getPlayer","index","remainingConnectionTime","remainingMoveTime","connected","isTurn","isClient","winner","lastAction","showCards","backgroundColor","mx","xs","md","my","borderRadius","py","border","COLORS","fontSize","textAlign","fontWeight","betThisHand","DealerChip","TimeChip","time","animation","animationTimingFunction","Cards","big","yOffset","width","height","overflow","key","boxShadow","color","Table","pot","layout","maxHeight","minHeight","mt","Room","portrait","setPortrait","currentPlayer","seatedPlayers","sort","a","b","callback","addEventListener","removeEventListener","SMALL_2","SMALL","PORTRAIT","LANDSCAPE","Lobby","setRoom","availableRooms","setAvailableRooms","faker","firstName","setName","intervalRef","useRef","autoConnectAttempted","createRoom","useCallback","roomName","prompt","create","joinRoom","alert","getAvailableRooms","rooms","current","setInterval","clearInterval","lastRoom","TextField","placeholder","truncate","target","omission","marginBottom","RoomListItem","cursor","textDecoration","metadata","EmptyState","App","setCards","setPlayers","setCurrentTurn","setCurrentBet","setBlind","setPot","onLeave","state","changes","forEach","field","toJSON","padding","Client","ReactDOM","render","getElementById"],"mappings":";qUACA,omGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IASMC,EAAqB,uCAAG,WAAMC,GAAM,yEAEL,KAAxCC,EAAYC,aAAaC,QAAQH,IAErB,CAAD,yCAEII,OAAOC,SAASC,UAAUN,EAAQC,GAAU,OAAzDM,EAAI,+DAIG,GAJH,KAIDA,EAAI,uCAAWH,OAAOC,SAASG,SAASR,GAAO,4BAAlD,OAAJO,EAAI,uBAEGA,GAAI,yDACZ,gBAbiC,sCAerBE,EAAW,SAACF,EAAMG,GAC7BR,aAAaS,QAAQ,OAAQD,GAC7BR,aAAaS,QAAQJ,EAAKK,GAAIL,EAAKN,YAGxBY,EAAa,WAAH,OACrBC,SAASC,gBAAgBC,aAAe,KACxCF,SAASC,gBAAgBE,cAAgB,KAE9BC,EAAa,WAAH,OACrBJ,SAASC,gBAAgBC,aAAe,KACxCF,SAASC,gBAAgBE,cAAgB,KAE9BE,EAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,EAAS,CACpB,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGWC,EAAe,SAACC,EAAQC,GACnC,GAAqB,IAAjBA,EAAMC,OACR,MAAO,GAET,IAAMC,EAAcF,EAAMG,KAAI,SAAAC,GAAC,gBAAOP,EAAOO,EAAEC,QAAM,OAAGT,EAAMQ,EAAEE,UAC1DC,EAAOR,EAAOC,MACjBG,KAAI,SAAAC,GAAC,gBAAOP,EAAOO,EAAEC,QAAM,OAAGT,EAAMQ,EAAEE,UACtCE,OAAON,GAEV,OADcO,OAAKC,MAAMH,GACZI,OAGFC,EAAgB,WAAH,OACxBrB,SAASC,gBAAgBC,YAAcF,SAASC,gBAAgBE,cAErDmB,EAAe,SAAAC,GAAC,OAC3BC,IAAQD,GACLE,OAAO,aACPC,e,qDCxEQC,EAAO,SAAH,GAMV,IALLC,EAAO,EAAPA,QAAQ,EAAD,EACPC,YAAI,MAAG,EAAC,EACRC,EAAQ,EAARA,SAAS,EAAD,EACRC,MAAOC,OAAY,MAAG,GAAE,EACrBC,EAAK,iBAEJF,EAAQ,CAAEG,QAAS,OAAQL,QAmB/B,MAjBI,SAASM,KAAKP,KAChBG,EAAMK,cAAgB,UAGpB,kBAAkBD,KAAKP,KACzBG,EAAMM,eAAiB,iBAGrB,eAAeF,KAAKP,GACtBG,EAAMO,WAAa,SACV,iBAAiBH,KAAKP,GAC/BG,EAAMM,eAAiB,SACd,SAASF,KAAKP,KACvBG,EAAMM,eAAiB,SACvBN,EAAMO,WAAa,UAInB,kBAACC,EAAA,EAAG,eAACR,MAAK,2BAAOA,GAAUC,IAAoBC,GAC5CH,IAKA,SAASU,EAAM,GAAuB,IAArBC,EAAM,EAANA,OAAWR,EAAK,iBACtC,OAAO,kBAACS,EAAA,EAAI,iBAAKT,EAAK,CAAEU,MAAO,IAAMrB,EAAamB,M,kBC1B7C,SAASG,EAAQ,GAAoD,IAAlDnD,EAAI,EAAJA,KAAMoD,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QACxDxC,EAASwC,EAAQC,MAAK,SAAAC,GAAC,OAAIA,EAAEpD,KAAOL,EAAKN,cAAc,GACvDgE,EAAUL,IAAgBrD,EAAKN,UAC/BiE,EAAgBJ,EAAQK,QAAO,SAAAH,GAAC,OAAIA,EAAEI,UACtCC,EAAaP,EAAQK,QAAO,SAAAH,GAAC,OAAIA,EAAEM,WAAa,GAAKN,EAAEO,MAAQ,KAAG/C,OAClEgD,EAAUlD,EAAOmD,QAAUJ,GAAc,GAA8B,IAAzBH,EAAc1C,OAC5DkD,GAAiC,IAAtBpD,EAAOgD,UAClBK,EAAa,SAACC,GAAM,IAAEC,EAAI,uDAAG,GAAE,OAAKtE,EAAKuE,KAAK,aAAEF,UAAWC,KAEjE,OACE,qCACIZ,GAAWO,GAAWlD,EAAOyD,UAC7B,kBAACC,EAAa,CACZR,QAASA,EACTX,WAAYA,EACZoB,UAAmB,EAARtB,EACXrC,OAAQA,EACRqC,MAAOA,EACPG,QAASA,EACTa,WAAYA,EACZV,QAASA,IAIb,kBAAC,EAAI,CACHtB,KAAM,EACNQ,eAAe,WACf+B,SAAS,QACTC,IAAK,GACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,KAER,kBAACC,EAAA,EAAM,CACLC,QAAS,WACHd,EACFC,EAAW,UAEXzE,aAAauF,WAAWlF,EAAKK,IAC7BL,EAAKmF,WAIRhB,EAAW,QAAU,WAOhC,IAAMiB,EAAS,SAAH,WAAMjD,eAAO,MAAG,YAAW,EAAKK,EAAK,wBAC/C,kBAACwC,EAAA,EAAM,eAAC7C,QAASA,GAAaK,EAAK,CAAEF,MAAO,CAAE+C,OAAQ,OAGxD,SAASZ,EAAc,GAWnB,IAVFR,EAAO,EAAPA,QACAG,EAAU,EAAVA,WAAW,EAAD,EACVd,kBAAU,MAAG,EAAC,EACdvC,EAAM,EAANA,OACAqC,EAAK,EAALA,MACAM,EAAO,EAAPA,QACAgB,EAAS,EAATA,UACAnB,EAAO,EAAPA,QAAQ,EAAD,EACP+B,gBAAQ,OAAQ,MAChBC,iBAAS,OAAQ,EAEX5B,EAAgBJ,EAAQK,QAAO,SAAAH,GAAC,OAAIA,EAAEI,UAE5C,EAAkC2B,mBAASlC,GAAW,mBAA/CmC,EAAS,KAAEC,EAAY,KAC9B,EAA0CF,oBAAS,GAAM,mBAAlDG,EAAa,KAAEC,EAAgB,KACtC,EAAkCJ,oBAAS,GAAM,mBAA1CK,EAAS,KAAEC,EAAY,KACxBC,EAAchF,EAAOiD,MAAQjD,EAAOuC,WAsB1C,OApBA0C,qBAAU,WACJ/B,GAAWqB,GACblB,EAAW,UAEZ,CAACH,EAASG,EAAYkB,IAEzBU,qBAAU,WACkB,kBAAf1C,GACToC,EAAapC,EAAqB,EAARF,KAE3B,CAACE,EAAYF,IAEhB4C,qBAAU,WACa,IAAjBjF,EAAOiD,OAA8B,IAAfV,GAAoBiC,GAC5CU,YAAW,WACT7B,EAAW,WACV,OAEJ,CAACrD,EAAQwE,EAAWnB,EAAYd,IAGjC,kBAAC,EAAI,CACHlB,KAAM,EACND,QAAQ,gBACRwC,SAAS,QACTuB,OAAQ,GACRrB,KAAM,EACNC,MAAO,EACPC,OAAQ,KAER,kBAAC,EAAI,CACH5C,QAAQ,iBACRG,MAAO,CAAE6D,SAAU,OAAQC,SAAU,MAEpCT,EACC,kBAAC7C,EAAA,EAAG,KACF,kBAAC,EAAI,KACH,kBAAC,EAAM,CAACmC,QAAS,kBAAMW,GAAiB,KAAO,UAC/C,kBAAC,EAAM,CAACX,QAAS,kBAAMS,EAAaD,EAAYrC,KAAO,IACnDA,GAEJ,kBAAC,EAAM,CAAC6B,QAAS,kBAAMS,EAAaD,EAAYrC,KAAO,IACnDA,GAEJ,kBAAC,EAAM,CACL6B,QAAS,WACPW,GAAiB,GACjBxB,EAAW,MAAO,CAAEpB,OAAQyC,MAC5B,WAKN,kBAAC,EAAI,KACH,kBAACY,EAAA,EAAM,CACLhF,MAAOoE,EACPa,SAAU,SAACC,EAAOC,GAAQ,OAAKd,EAAac,IAC5CC,kBAAgB,oBAChBC,KAAc,EAARtD,EACNuD,IAAa,EAARvD,EACLwD,IAAKb,EACLzD,MAAO,CAAEuE,YAAa,MAExB,kBAAC,EAAI,CAAC1E,QAAQ,SAASG,MAAO,CAAEwE,SAAU,KACxC,kBAACC,EAAA,EAAU,SAAGlF,EAAa4D,OAKjC,oCACG1E,EAAOyD,SACN,kBAACwC,EAAA,EAAgB,CACfC,QACE,kBAACC,EAAA,EAAQ,CACPC,QAAStB,EACTS,SAAU,SAACc,EAAGZ,GAAQ,OAAKV,EAAaU,IACxCrG,KAAK,cAGT+C,MAAM,UAITe,GACC,kBAAC,EAAM,CAACoD,UAAWpD,EAASgB,QAAS,kBAAMb,EAAW,UAAQ,QAK/DT,EAAc1C,OAAS,GACtB,kBAAC,EAAM,CACLoG,UAAW3D,EACXuB,QAAS,kBACPb,EAAWd,EAAavC,EAAOuC,WAAa,OAAS,WAGtDA,EAAavC,EAAOuC,WAAa,OAAS,SAI9CK,EAAc1C,OAAS,GAAKqC,EAAa,GACxC,kBAAC,EAAM,CACL+D,UAAW3D,GAAWJ,IAAevC,EAAOuC,WAC5C2B,QAAS,kBAAMb,EAAW,UAEzBd,EAAayC,EAAc,SAAW,OAAM,MAC5ClE,EACCyB,EAAayC,EAAcA,EAAczC,GAC1C,KAKJK,EAAc1C,OAAS,GACtB,kBAAC,EAAM,CACLoG,UAAW3D,GAAWqC,EAAczC,EAAaoB,EACjDO,QAAS,WACPW,GAAiB,GACjBF,EAAapC,EAAqB,EAARF,KAG3BE,EAAa,EAAC,kBACAzB,EAAayB,EAAqB,EAARF,GAAU,KAC/C,OAIPyC,GACC,oCACE,kBAAC,EAAM,CACLwB,SAAU9D,EAAQtC,QAAU,GAC5BgE,QAAS,kBAAMb,EAAW,YAAU,SAItC,kBAAC,EAAM,CACLiD,SAAkD,IAAxC9D,EAAQK,QAAO,SAAAH,GAAC,OAAIA,EAAE6D,SAAOrG,OACvCgE,QAAS,kBAAMb,EAAW,eAAa,SAIzC,kBAAC,EAAM,CACLiD,SAAkD,IAAxC9D,EAAQK,QAAO,SAAAH,GAAC,OAAIA,EAAE6D,SAAOrG,OACvCgE,QAAS,kBAAMb,EAAW,oBAAkB,YAElChB,EAAK,KAEjB,kBAAC,EAAM,CACLiE,SAAkD,IAAxC9D,EAAQK,QAAO,SAAAH,GAAC,OAAIA,EAAE6D,SAAOrG,OACvCgE,QAAS,kBAAMb,EAAW,oBAAkB,YAElChB,EAAK,KAEjB,kBAAC,EAAM,CAAC6B,QAAS,kBAAMb,EAAW,UAAQ,sBC7O1D,IAAMxD,EAAQ,CAAC,SAAU,QAAS,SAAU,YAE/B2G,EAAO,SAAH,GAAuD,IAAjDC,EAAI,EAAJA,KAAK,EAAD,EAAEC,SAAC,MAAG,EAAC,MAAEC,SAAC,MAAG,EAAC,MAAEC,aAAK,MAAG,EAAC,MAAErF,aAAK,MAAG,GAAE,EACxDsF,EAAU,CACd,OACAJ,GAAI,cAAWA,EAAKnG,QACnBmG,EAAKnG,OAAS,WACfmG,GAAQ5G,EAAM4G,EAAKlG,OAGrB,OACE,yBACEuG,UAAWD,EAAQE,KAAK,KACxBxF,MAAK,aACHyF,UAAU,eAAD,OAAiBN,EAAC,eAAOC,EAAC,0BAAkBC,EAAK,MACvDrF,IAGL,yBAAKuF,UAAU,SACf,yBAAKA,UAAU,WCdRG,EAAO,SAAH,GAAiD,IAA3CC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAM,EAAD,EAAE7F,aAAK,MAAG,GAAE,EAClDvB,EAASmH,EAAUC,IAAU,GAEjC9H,EAgBEU,EAhBFV,GACA+H,EAeErH,EAfFqH,wBACAC,EAcEtH,EAdFsH,kBACAC,EAaEvH,EAbFuH,UACAC,EAYExH,EAZFwH,OACAC,EAWEzH,EAXFyH,SACArI,EAUEY,EAVFZ,KACAsI,EASE1H,EATF0H,OACA5E,EAQE9C,EARF8C,OACA6E,EAOE3H,EAPF2H,WAAW,EAOT3H,EANFuC,kBAAU,MAAG,EAAC,EACdU,EAKEjD,EALFiD,MACAzC,EAIER,EAJFQ,KACAoH,EAGE5H,EAHF4H,UACA3H,EAEED,EAFFC,MACAkD,EACEnD,EADFmD,OAGE0E,EAAkB,UAWtB,OAVIL,IACFK,EAAkB,SAEhBvI,IAAOiI,IACTM,EAAkB,WAEhBH,IACFG,EAAkB,WAIlB,kBAAC,EAAI,CAACjE,SAAS,WAAWxC,QAAQ,UAChC,kBAAC,EAAI,CACHC,KAAM,EACNyG,GAAI,CAAEC,GAAI,IAAMC,GAAI,GACpBC,GAAI,CAAEF,GAAI,EAAGC,GAAI,GACjB5G,QAAQ,SACR8G,aAAc,GACdnC,SAAUvG,SAASC,gBAAgBC,YAAc,IAAM,GAAK,GAC5D2F,SAAU,IACVzB,SAAS,WACTuE,GAAI,EACJ5G,MAAK,aACH6G,OAAO,aAAD,OAAeC,EAAOjB,IAC5BS,kBACA7D,OAAQb,EAAS,GAAK,IACnB5B,IAGJjC,EACC,oCACE,kBAAC,EAAI,CAAC8B,QAAQ,iBACZ,kBAAC4E,EAAA,EAAU,CACTzE,MAAO,CACL+G,SAAUb,EAAW,GAAK,GAC1Bc,UAAW,SACXC,WAAYf,EAAW,OAAS,WAGjCrI,GAAQE,GAEX,kBAAC0G,EAAA,EAAU,CAACzE,MAAO,CAAE+G,SAAU,KAAK,IAChCxH,EAAamC,KAIlBV,EAAa,GACZ,kBAACR,EAAA,EAAG,CAAC6B,SAAS,WAAWuB,QAAS,GAAInB,OAAQ,IAC5C,kBAAChC,EAAK,CAACC,OAAQM,KAIlBvC,EAAOyI,YAAc,GAAKb,GACzB,kBAAC7F,EAAA,EAAG,CAAC6B,SAAS,WAAWuB,QAAS,GAAInB,OAAQ,IAC5C,kBAACgC,EAAA,EAAU,mBAAahG,EAAOyI,cAIlCtF,GAAU,kBAACuF,EAAU,MACrBlB,GACC,kBAACmB,EAAQ,CACPC,KAAOrB,EAAsCD,EAA1BD,IAItBM,GACC,kBAAC5F,EAAA,EAAG,CACF6B,SAAS,WACTuB,OAAQ,GACRnB,OAAQ,GACRzC,MAAO,CACLsH,UAAW,aACXC,wBAAyB,WAG3B,kBAAC5G,EAAA,EAAI,CAACC,MAAOwF,KAIhB7E,GAAUP,GAAc,GAAKqF,GAAapH,GACzC,kBAACuB,EAAA,EAAG,CAAC6B,SAAS,WAAWuB,QAAS,GAAInB,OAAQ,IAC5C,kBAAC9B,EAAA,EAAI,CAACC,MAAO3B,MAKnB,kBAACyD,EAAA,EAAM,CAACqC,UAAWY,EAAOhD,QAAS,kBAAMgD,EAAME,KAAO,QAKzDnH,GAAS,kBAAC8I,EAAK,CAACC,IAAKvB,GAAYG,EAAW3H,MAAOA,MAK1D,SAAS8I,EAAM,GAAiB,IAAfC,EAAG,EAAHA,IAAK/I,EAAK,EAALA,MACdgJ,EAAU1J,IAAe,GAAK,GAC9BqH,EAAQoC,EAAM,EAAI,GACxB,OACE,kBAACjH,EAAA,EAAG,CACF6B,SAAS,WACTlC,QAAQ,OACRG,eAAe,SACfmC,OAAQ,EACRkF,MAAO,IACPC,OAAQ,IACRhE,OAAQ,GACRiE,SAAS,UAERnJ,EAAMG,KAAI,SAACqG,EAAMjI,GAAC,OACjB,kBAACuD,EAAA,EAAG,CAACsH,IAAG,eAAU7K,GAAK0K,MAAa,IAAN1K,EAAU,GAAK,MAC3C,kBAAC,EAAI,CACH6K,IAAK7K,EACLiI,KAAMA,EACNG,MACErH,IAAuB,GAARqH,EAAcA,GAAShH,IAAe,IAAM,GAE7D+G,EAAGsC,EACH1H,MAAO,CAAEqC,SAAU,WAAYI,OAAQgF,EAAM,GAAK,UAQ9D,SAASL,EAAS,GAAW,IAATC,EAAI,EAAJA,KAClB,OACE,kBAAC7G,EAAA,EAAG,CACFL,QAAQ,OACRG,eAAe,SACfC,WAAW,SACXoH,MAAO,GACPC,OAAQ,GACRjB,aAAc,GACdtE,SAAS,WACTG,OAAQ,GACRxC,MAAO,CACLyC,OAAQ,IACRsF,UAAW,8BACXzB,gBAAiB,QACjB0B,MAAO,UAGRX,GAKP,SAASF,IACP,OACE,kBAAC3G,EAAA,EAAG,CACFL,QAAQ,OACRG,eAAe,SACfC,WAAW,SACXoH,MAAO,GACPC,OAAQ,GACRjB,aAAc,GACdtE,SAAS,WACTG,OAAQ,GACRxC,MAAO,CACLyC,OAAQ,IACRsF,UAAW,8BACXzB,gBAAiB,QACjB0B,MAAO,UACP,KAOR,IAAMlB,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WC3FamB,EAjHD,SAAH,GAAsD,IAAhDC,EAAG,EAAHA,IAAKC,EAAM,EAANA,OAAQzK,EAAI,EAAJA,KAAMgB,EAAK,EAALA,MAAOiH,EAAK,EAALA,MAAO1E,EAAO,EAAPA,QAC1C2E,EAAY,SAAA3I,GAAC,OACjBgE,EACGpC,KAAI,SAAAsC,GAAC,kCACDA,GAAC,IACJlC,KAAMT,EAAa2C,EAAGzC,GACtBwH,SAAU/E,EAAEpD,KAAOL,EAAKN,eAEzB8D,MAAK,SAAAC,GAAC,OAAIA,EAAEM,YAAcxE,MAE/B,OACE,kBAAC,EAAI,CACH4C,QAAQ,yBACR8H,MAAM,OACN7D,SAAU,KACVsE,UAAW,KAEX,kBAAC,EAAI,KACFnK,SAASC,gBAAgBE,aAAe,KACvCH,SAASC,gBAAgBC,YAAc,KAAO,kBAAC,EAAI,MACpDgK,EAAO,GAAGtJ,KAAI,SAAAW,GAAC,OACd,kBAAC,EAAI,CACHsI,IAAG,eAAUtI,GACbqG,MAAOrG,EACPoG,UAAWA,EACXD,MAAOA,OAGV1H,SAASC,gBAAgBE,aAAe,KACvCH,SAASC,gBAAgBC,YAAc,KAAO,kBAAC,EAAI,OAGvD,kBAAC,EAAI,CAAC2B,KAAM,GACTqI,EAAO,GAAGxJ,OAAS,GAClB,kBAAC,EAAI,CAACkB,QAAQ,UACXsI,EAAO,GAAGtJ,KAAI,SAAAW,GAAC,OACd,kBAAC,EAAI,CACHsI,IAAG,eAAUtI,GACbqG,MAAOrG,EACPoG,UAAWA,EACXD,MAAOA,QAMf,kBAAC,EAAI,CACH9F,QAAQ,gBACRwI,UAAWpK,SAASC,gBAAgBC,YAAc,IAAM,IAAM,EAC9D2B,KAAM,GAEN,kBAACU,EAAA,EAAG,CACF6H,UAAW,IACX7D,SAAU,IACVrE,QAAQ,OACRG,eAAe,SACfC,WAAW,SACXsD,SAAS,QAER5F,SAASC,gBAAgBE,cAAgB,KAAO8J,EAAM,GACrD,kBAAC1H,EAAA,EAAG,CAACiC,OAAQ,IACX,kBAAChC,EAAK,CAACC,OAAQwH,KAGlBxJ,EAAMG,KAAI,SAACqG,EAAMjI,GAAC,OACjB,kBAAC,EAAI,CACH6K,IAAK5C,EAAKW,MACVX,KAAMA,EACNG,MAAOhH,IAAe,IAAM,EAC5B2B,MAAO,CAAE+C,OAAQ1E,IAAe,GAAK,SAI1CJ,SAASC,gBAAgBE,aAAe,KACvCH,SAASC,gBAAgBC,YAAc,KACvC+J,EAAM,GACJ,kBAAC1H,EAAA,EAAG,CAAC8H,GAAI,EAAG7F,OAAQ,IAClB,kBAAChC,EAAK,CAACC,OAAQwH,MAKtBC,EAAO,GAAGxJ,OAAS,GAClB,kBAAC,EAAI,CAACkB,QAAQ,UACXsI,EAAO,GAAGtJ,KAAI,SAAAW,GAAC,OACd,kBAAC,EAAI,CACHsI,IAAG,eAAUtI,GACbqG,MAAOrG,EACPoG,UAAWA,EACXD,MAAOA,SAOjB,kBAAC,EAAI,KACF1H,SAASC,gBAAgBE,aAAe,KACvCH,SAASC,gBAAgBC,YAAc,KAAO,kBAAC,EAAI,MACpDgK,EAAO,GAAGtJ,KAAI,SAAAW,GAAC,OACd,kBAAC,EAAI,CACHsI,IAAG,eAAUtI,GACbqG,MAAOrG,EACPoG,UAAWA,EACXD,MAAOA,OAGV1H,SAASC,gBAAgBE,aAAe,KACvCH,SAASC,gBAAgBC,YAAc,KAAO,kBAAC,EAAI,SC/GtD,SAASoK,EAAK,GAAoC,IAAD,IAAjCL,WAAG,MAAG,EAAC,EAAEjH,EAAO,EAAPA,QAASvD,EAAI,EAAJA,KAAMgB,EAAK,EAALA,MAC7C,EAAgCwE,mBAAS5D,KAAgB,mBAAlDkJ,EAAQ,KAAEC,EAAW,KACtBC,EAAgBzH,EAAQC,MAAK,SAAAC,GAAC,OAAIA,EAAEpD,KAAOL,EAAKN,cAAc,GAC9DuL,EAAgB1H,EACnBK,QAAO,SAAAH,GAAC,OAAqB,IAAjBA,EAAEM,aACd5C,KAAI,SAAAsC,GAAC,kCAAUA,GAAC,IAAE+E,SAAU/E,EAAEpD,KAAOL,EAAKN,eAC1CwL,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEpH,UAAYqH,EAAErH,aAE5BkE,GACyB,IAA7B+C,EAAcjH,UACV,SAAAA,GAAS,OAAI/D,EAAKuE,KAAK,CAAEF,OAAQ,MAAON,eACxC,KAQN,OANAiC,qBAAU,WACR,IAAMqF,EAAW,WAAH,OAASN,EAAYnJ,MAEnC,OADA/B,OAAOyL,iBAAiB,SAAUD,GAC3B,kBAAMxL,OAAO0L,oBAAoB,SAAUF,MACjD,IAGD,kBAAC,EAAK,CACJZ,OACElK,SAASC,gBAAgBE,cAAgB,IACrCsK,EAAcjH,WAAa,EACzByH,EACAC,EACFX,EACAY,EACAC,EAEN3K,MAAOA,EACPiH,MAAOA,EACPjI,KAAMA,EACNwK,IAAKA,EACLQ,cAAeA,EACfzH,QAAS0H,IAKf,IAAMS,EAAW,CACf,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,IAGAC,EAAY,CAChB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,IAEHF,EAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAC/CD,EAAU,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,I,8DCzDvD,qmGAAAjM,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAQO,SAASqM,GAAM,GAAc,IAAZC,EAAO,EAAPA,QACtB,EAA4CrG,mBAAS,IAAG,mBAAjDsG,EAAc,KAAEC,EAAiB,KACxC,EAAwBvG,mBACtB7F,aAAaC,QAAQ,SAAWoM,KAAM7L,KAAK8L,aAC5C,mBAFM9L,EAAI,KAAE+L,EAAO,KAGdC,EAAcC,mBACdC,EAAuBD,kBAAO,GAE9BE,EAAaC,sBAAW,wCAC5B,WAAMpM,GAAI,0EAC6B,GAA/BqM,EAAWC,OAAO,cACV,CAAD,gEAEM5M,OAAOC,SAAS4M,OAAO,QAAS,CAAEF,aAAW,OAA1DxM,EAAI,OACVE,EAASF,EAAMG,GACfH,EAAKuE,KAAK,CAAEF,OAAQ,UAAWlE,SAC/BH,EAAKuE,KAAK,CAAEF,OAAQ,QACpBwH,EAAQ7L,GAAK,4CACd,mDAV2B,GAW5B,CAAC6L,IAGGc,EAAWJ,sBAAW,wCAC1B,WAAO9M,EAAQU,GAAI,wFACEX,EAAsBC,GAAO,OAAtC,GAAJO,EAAI,OACA,CAAD,eACqB,OAA5B4M,MAAM,uBAAsB,0BAG9B1M,EAASF,EAAMG,GACfH,EAAKuE,KAAK,CAAEF,OAAQ,UAAWlE,SAC/BH,EAAKuE,KAAK,CAAEF,OAAQ,QACpBwH,EAAQ7L,GAAK,4CACd,qDAXyB,GAY1B,CAAC6L,IAGGgB,EAAoBN,sBAAW,uBAAC,qGAChB1M,OAAOC,SAAS+M,oBAAmB,OAAjDC,EAAK,OACXf,EAAkBe,GAAM,2CACvB,IAqBH,OAnBA9G,qBAAU,WAGR,OAFA6G,IACAV,EAAYY,QAAUC,YAAYH,EAAmB,KAC9C,kBAAMI,cAAcd,EAAYY,YACtC,CAACF,IAEJ7G,qBAAU,WACR,GAAI8F,EAAgB,CAClB,IAAMoB,EAAWpB,EAAetI,MAAK,SAAAxD,GAAI,OACvCL,aAAaC,QAAQI,EAAKP,WAGTyN,IAAab,EAAqBU,UACnDV,EAAqBU,SAAU,EAC/BJ,EAASO,EAASzN,OAAQU,OAG7B,CAAC2L,EAAgBa,EAAUxM,IAG5B,kBAAC,EAAI,CAACgC,QAAQ,gBAAgBG,MAAO,CAAE4H,OAAQ,UAC7C,kBAACiD,EAAA,EAAS,CACRC,YAAY,aACZ/L,MAAOlB,EACPmG,SAAU,SAAAc,GAAC,OACT8E,EAAQmB,KAASjG,EAAEkG,OAAOjM,MAAO,CAAEJ,OAAQ,GAAIsM,SAAU,OAE3DjL,MAAO,CAAEkL,aAAc,MAGzB,kBAACzG,EAAA,EAAU,CAAC5E,QAAQ,MAAI,qBAExB,kBAAC,EAAI,CAACC,KAAM,EAAGD,QAAQ,gBAAgBG,MAAO,CAAEqI,UAAW,MAC9B,IAA1BmB,EAAe7K,QAAgB,kBAAC,GAAU,MAE1C6K,EAAe3K,KAAI,SAAAnB,GAAI,OACtB,kBAAC,GAAY,CACXoK,IAAKpK,EAAKP,OACVO,KAAMA,EACNiF,QAAS,kBAAM0H,EAAS3M,EAAKP,OAAQU,UAK3C,kBAAC6E,EAAA,EAAM,CAAC7C,QAAQ,YAAY8C,QAAS,kBAAMqH,EAAWnM,KAAM,gBAOlE,IAAMsN,GAAe,SAAH,OAAMzN,EAAI,EAAJA,KAAMiF,EAAO,EAAPA,QAAO,OACnC,kBAACnC,EAAA,EAAG,KACF,kBAACiE,EAAA,EAAU,CACTzE,MAAO,CAAEoL,OAAQ,UAAWC,eAAgB,aAC5C1I,QAASA,GAERjF,EAAK4N,SAASpB,UAAYxM,EAAKP,UAKhCoO,GAAa,WAAH,OAAS,kBAAC9G,EAAA,EAAU,4B,QCpCrB+G,OArEf,WACE,MAAwBtI,qBAAU,mBAA3BxF,EAAI,KAAE6L,EAAO,KACpB,EAA0BrG,mBAAS,IAAG,mBAA/BxE,EAAK,KAAE+M,EAAQ,KACtB,EAA8BvI,mBAAS,IAAG,mBAAnCjC,EAAO,KAAEyK,EAAU,KAC1B,EAAsCxI,qBAAU,mBAAzCnC,EAAW,KAAE4K,EAAc,KAClC,EAAoCzI,mBAAS,GAAE,mBAAxClC,EAAU,KAAE4K,EAAa,KAChC,EAA0B1I,mBAAS,GAAE,mBAA9BpC,EAAK,KAAE+K,EAAQ,KACtB,EAAsB3I,qBAAU,mBAAzBgF,EAAG,KAAE4D,EAAM,KA8BlB,OA5BApI,qBAAU,WACHhG,IAELA,EAAKqO,SAAQ,WACXxC,EAAQ,MACRmC,EAAW,IACXC,IACAF,EAAS,OAGX/N,EAAKsO,MAAMhI,SAAW,SAAAiI,GAAO,OAC3BA,EAAQC,SAAQ,YAAuB,IAApBC,EAAK,EAALA,MAAOpN,EAAK,EAALA,MACV,UAAVoN,EACFV,EAAS1M,EAAMqN,UACI,gBAAVD,EACTR,EAAe5M,GACI,QAAVoN,EACTL,EAAO/M,GACY,UAAVoN,EACTN,EAAS9M,GACU,eAAVoN,EACTP,EAAc7M,GACK,YAAVoN,GACTT,EAAW3M,EAAMqN,SAASvN,KAAI,SAAAsC,GAAC,ORrCf1C,EQqC6B0C,ERrCrBpD,EQqCwBL,EAAKN,URrC3B,2BAC/BqB,GAAM,IAETC,MACED,EAAOV,KAAOA,GAAMU,EAAO4H,UACvB5H,EAAOC,MACPD,EAAOC,MAAMG,KAAI,SAAAC,GAAC,MAAK,QANN,IAACL,EAAQV,aQwC7B,CAACL,IAECA,EAOH,kBAAC,EAAI,CACHmC,QAAQ,gBACRgI,SAAS,SACT7H,MAAO,CACL2H,MACE1J,SAASC,gBAAgBC,YAAc,IACnC,qBACA,QACNyJ,OAAQ,qBACRyE,QACEpO,SAASC,gBAAgBC,YAAc,IAAM,YAAc,WAG/D,kBAACoK,EAAI,CAACL,IAAKA,EAAKxK,KAAMA,EAAMgB,MAAOA,EAAOuC,QAASA,IACnD,kBAACJ,EAAO,CACNnD,KAAMA,EACNoD,MAAOA,EACPE,WAAYA,EACZD,YAAaA,EACbE,QAASA,KAzBN,kBAACqI,GAAK,CAACC,QAASA,K,SCzC3BhM,OAAOC,SAAW,IAAI8O,UAEhB,mCAINC,IAASC,OAAO,kBAAC,GAAG,MAAKvO,SAASwO,eAAe,U","file":"static/js/main.2b2ee204.chunk.js","sourcesContent":["import { Hand } from 'pokersolver'\nimport numeral from 'numeral'\n\nexport const maskCards = (player, id) => ({\n  ...player,\n  // TODO: hide cards from server\n  cards:\n    player.id === id || player.showCards\n      ? player.cards\n      : player.cards.map(c => ({})),\n})\n\nexport const joinRoomWithReconnect = async roomId => {\n  let room,\n    sessionId = localStorage.getItem(roomId)\n\n  if (sessionId) {\n    try {\n      room = await window.colyseus.reconnect(roomId, sessionId)\n    } catch (e) {}\n  }\n\n  room = room || (await window.colyseus.joinById(roomId))\n\n  return room\n}\n\nexport const saveRoom = (room, name) => {\n  localStorage.setItem('name', name)\n  localStorage.setItem(room.id, room.sessionId)\n}\n\nexport const getIsSmall = () =>\n  document.documentElement.clientWidth <= 500 ||\n  document.documentElement.clientHeight <= 500\n\nexport const getIsLarge = () =>\n  document.documentElement.clientWidth >= 700 &&\n  document.documentElement.clientHeight >= 700\n\nexport const SUITS = ['s', 'c', 'h', 'd']\nexport const VALUES = [\n  0,\n  'A',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  'T',\n  'J',\n  'Q',\n  'K',\n]\n\nexport const getHandLabel = (player, cards) => {\n  if (cards.length === 0) {\n    return ''\n  }\n  const cardsString = cards.map(c => `${VALUES[c.value]}${SUITS[c.suit]}`)\n  const hand = player.cards\n    .map(c => `${VALUES[c.value]}${SUITS[c.suit]}`)\n    .concat(cardsString)\n  const value = Hand.solve(hand)\n  return value.descr\n}\n\nexport const getIsPortrait = () =>\n  document.documentElement.clientWidth < document.documentElement.clientHeight\n\nexport const formatNumber = n =>\n  numeral(n)\n    .format('(0[.]00a)')\n    .toUpperCase()\n","import React from 'react'\nimport { Box, Chip } from '@material-ui/core'\nimport { formatNumber } from '../utils'\n\nexport const Flex = ({\n  variant,\n  flex = 1,\n  children,\n  style: passedStyles = {},\n  ...props\n}) => {\n  let style = { display: 'flex', flex }\n\n  if (/column/.test(variant)) {\n    style.flexDirection = 'column'\n  }\n\n  if (/justify-between/.test(variant)) {\n    style.justifyContent = 'space-between'\n  }\n\n  if (/align-center/.test(variant)) {\n    style.alignItems = 'center'\n  } else if (/justify-center/.test(variant)) {\n    style.justifyContent = 'center'\n  } else if (/center/.test(variant)) {\n    style.justifyContent = 'center'\n    style.alignItems = 'center'\n  }\n\n  return (\n    <Box style={{ ...style, ...passedStyles }} {...props}>\n      {children}\n    </Box>\n  )\n}\n\nexport function Chips({ amount, ...props }) {\n  return <Chip {...props} label={'$' + formatNumber(amount)} />\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  Slider,\n  Box,\n  Typography,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core'\nimport { Flex } from './'\nimport { formatNumber } from '../utils'\n\nexport function Actions({ room, blind, currentTurn, currentBet, players }) {\n  const player = players.find(p => p.id === room.sessionId) || {}\n  const canMove = currentTurn === room.sessionId\n  const activePlayers = players.filter(p => p.inPlay)\n  const numPlayers = players.filter(p => p.seatIndex > -1 && p.money > 0).length\n  const canDeal = player.dealer && numPlayers >= 2 && activePlayers.length === 0\n  const canStand = player.seatIndex !== -1\n  const sendAction = (action, rest = {}) => room.send({ action, ...rest })\n\n  return (\n    <>\n      {(canMove || canDeal || player.isAdmin) && (\n        <BottomActions\n          canDeal={canDeal}\n          currentBet={currentBet}\n          betAmount={blind * 2}\n          player={player}\n          blind={blind}\n          players={players}\n          sendAction={sendAction}\n          canMove={canMove}\n        />\n      )}\n\n      <Flex\n        flex={0}\n        justifyContent=\"flex-end\"\n        position=\"fixed\"\n        top={10}\n        left={0}\n        right={0}\n        zIndex={100}\n      >\n        <Button\n          onClick={() => {\n            if (canStand) {\n              sendAction('stand')\n            } else {\n              localStorage.removeItem(room.id)\n              room.leave()\n            }\n          }}\n        >\n          {canStand ? 'Stand' : 'Leave'}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nconst Action = ({ variant = 'contained', ...props }) => (\n  <Button variant={variant} {...props} style={{ margin: 8 }} />\n)\n\nfunction BottomActions({\n  canDeal,\n  sendAction,\n  currentBet = 0,\n  player,\n  blind,\n  canMove,\n  betAmount,\n  players,\n  autoDeal = false,\n  autoCheck = false,\n}) {\n  const activePlayers = players.filter(p => p.inPlay)\n\n  const [customBet, setCustomBet] = useState(currentBet)\n  const [showBetSlider, setShowBetSlider] = useState(false)\n  const [showAdmin, setShowAdmin] = useState(false)\n  const playerTotal = player.money + player.currentBet\n\n  useEffect(() => {\n    if (canDeal && autoDeal) {\n      sendAction('deal')\n    }\n  }, [canDeal, sendAction, autoDeal])\n\n  useEffect(() => {\n    if (typeof currentBet === 'number') {\n      setCustomBet(currentBet + blind * 2)\n    }\n  }, [currentBet, blind])\n\n  useEffect(() => {\n    if (player.money === 0 && currentBet === 0 && autoCheck) {\n      setTimeout(() => {\n        sendAction('check')\n      }, 500)\n    }\n  }, [player, autoCheck, sendAction, currentBet])\n\n  return (\n    <Flex\n      flex={0}\n      variant=\"column center\"\n      position=\"fixed\"\n      bottom={10}\n      left={0}\n      right={0}\n      zIndex={100}\n    >\n      <Flex\n        variant=\"justify-center\"\n        style={{ flexWrap: 'wrap', maxWidth: 600 }}\n      >\n        {showBetSlider ? (\n          <Box>\n            <Flex>\n              <Action onClick={() => setShowBetSlider(false)}>Cancel</Action>\n              <Action onClick={() => setCustomBet(customBet - blind)}>\n                -{blind}\n              </Action>\n              <Action onClick={() => setCustomBet(customBet + blind)}>\n                +{blind}\n              </Action>\n              <Action\n                onClick={() => {\n                  setShowBetSlider(false)\n                  sendAction('bet', { amount: customBet })\n                }}\n              >\n                Submit\n              </Action>\n            </Flex>\n            <Flex>\n              <Slider\n                value={customBet}\n                onChange={(event, newValue) => setCustomBet(newValue)}\n                aria-labelledby=\"continuous-slider\"\n                step={blind * 2}\n                min={blind * 2}\n                max={playerTotal}\n                style={{ marginRight: 20 }}\n              />\n              <Flex variant=\"center\" style={{ minWidth: 80 }}>\n                <Typography>${formatNumber(customBet)}</Typography>\n              </Flex>\n            </Flex>\n          </Box>\n        ) : (\n          <>\n            {player.isAdmin && (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={showAdmin}\n                    onChange={(e, newValue) => setShowAdmin(newValue)}\n                    name=\"showAdmin\"\n                  />\n                }\n                label=\"Admin\"\n              />\n            )}\n\n            {canDeal && (\n              <Action disabled={!canDeal} onClick={() => sendAction('deal')}>\n                Deal\n              </Action>\n            )}\n\n            {activePlayers.length > 0 && (\n              <Action\n                disabled={!canMove}\n                onClick={() =>\n                  sendAction(currentBet > player.currentBet ? 'fold' : 'check')\n                }\n              >\n                {currentBet > player.currentBet ? 'Fold' : 'Check'}\n              </Action>\n            )}\n\n            {activePlayers.length > 0 && currentBet > 0 && (\n              <Action\n                disabled={!canMove || currentBet === player.currentBet}\n                onClick={() => sendAction('call')}\n              >\n                {currentBet > playerTotal ? 'All in' : 'Call'} ($\n                {formatNumber(\n                  currentBet > playerTotal ? playerTotal : currentBet,\n                )}\n                )\n              </Action>\n            )}\n\n            {activePlayers.length > 0 && (\n              <Action\n                disabled={!canMove || playerTotal < currentBet + betAmount}\n                onClick={() => {\n                  setShowBetSlider(true)\n                  setCustomBet(currentBet + blind * 2)\n                }}\n              >\n                {currentBet > 0\n                  ? `Raise ($${formatNumber(currentBet + blind * 2)})`\n                  : 'Bet'}\n              </Action>\n            )}\n\n            {showAdmin && (\n              <>\n                <Action\n                  disabled={players.length >= 10}\n                  onClick={() => sendAction('addBot')}\n                >\n                  + bot\n                </Action>\n                <Action\n                  disabled={players.filter(p => p.isBot).length === 0}\n                  onClick={() => sendAction('removeBot')}\n                >\n                  - bot\n                </Action>\n                <Action\n                  disabled={players.filter(p => p.isBot).length === 0}\n                  onClick={() => sendAction('increaseBlinds')}\n                >\n                  + blind ({blind})\n                </Action>\n                <Action\n                  disabled={players.filter(p => p.isBot).length === 0}\n                  onClick={() => sendAction('decreaseBlinds')}\n                >\n                  - blind ({blind})\n                </Action>\n                <Action onClick={() => sendAction('gift')}>\n                  give 1k to all\n                </Action>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n","import React from 'react'\nconst SUITS = ['spades', 'clubs', 'hearts', 'diamonds']\n\nexport const Card = ({ card, x = 0, y = 0, scale = 1, style = {} }) => {\n  const classes = [\n    'card',\n    card && `rank${card.value}`,\n    !card.value && 'finished',\n    card && SUITS[card.suit],\n  ]\n\n  return (\n    <div\n      className={classes.join(' ')}\n      style={{\n        transform: `translate3d(${x}px, ${y}px, 0px) scale(${scale})`,\n        ...style,\n      }}\n    >\n      <div className=\"face\" />\n      <div className=\"back\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Card } from './Card'\nimport { Button, Box, Typography, Chip } from '@material-ui/core'\nimport { Flex, Chips } from '.'\nimport { getIsSmall, getIsLarge, formatNumber } from '../utils'\n\nexport const Seat = ({ onSit, getPlayer, index, style = {} }) => {\n  const player = getPlayer(index) || {}\n  const {\n    id,\n    remainingConnectionTime,\n    remainingMoveTime,\n    connected,\n    isTurn,\n    isClient,\n    name,\n    winner,\n    inPlay,\n    lastAction,\n    currentBet = 0,\n    money,\n    hand,\n    showCards,\n    cards,\n    dealer,\n  } = player\n\n  let backgroundColor = '#54b786'\n  if (isTurn) {\n    backgroundColor = 'white'\n  }\n  if (id && !connected) {\n    backgroundColor = '#d86e6e'\n  }\n  if (winner) {\n    backgroundColor = '#00fff3'\n  }\n\n  return (\n    <Flex position=\"relative\" variant=\"center\">\n      <Flex\n        flex={1}\n        mx={{ xs: 0.25, md: 2 }}\n        my={{ xs: 2, md: 4 }}\n        variant=\"center\"\n        borderRadius={12}\n        minWidth={document.documentElement.clientWidth < 400 ? 64 : 83}\n        maxWidth={125}\n        position=\"relative\"\n        py={1}\n        style={{\n          border: `3px solid ${COLORS[index]}`,\n          backgroundColor,\n          zIndex: dealer ? 15 : 10,\n          ...style,\n        }}\n      >\n        {id ? (\n          <>\n            <Flex variant=\"column center\">\n              <Typography\n                style={{\n                  fontSize: isClient ? 14 : 12,\n                  textAlign: 'center',\n                  fontWeight: isClient ? 'bold' : 'normal',\n                }}\n              >\n                {name || id}\n              </Typography>\n              <Typography style={{ fontSize: 12 }}>\n                ${formatNumber(money)}\n              </Typography>\n            </Flex>\n\n            {currentBet > 0 && (\n              <Box position=\"absolute\" bottom={-25} zIndex={99}>\n                <Chips amount={currentBet} />\n              </Box>\n            )}\n\n            {player.betThisHand > 0 && showCards && (\n              <Box position=\"absolute\" bottom={-45} zIndex={99}>\n                <Typography>Total bet: {player.betThisHand}</Typography>\n              </Box>\n            )}\n\n            {dealer && <DealerChip />}\n            {isTurn && (\n              <TimeChip\n                time={!connected ? remainingConnectionTime : remainingMoveTime}\n              />\n            )}\n\n            {lastAction && (\n              <Box\n                position=\"absolute\"\n                bottom={44}\n                zIndex={66}\n                style={{\n                  animation: 'animate 3s',\n                  animationTimingFunction: 'linear',\n                }}\n              >\n                <Chip label={lastAction} />\n              </Box>\n            )}\n\n            {inPlay && currentBet <= 0 && showCards && hand && (\n              <Box position=\"absolute\" bottom={-23} zIndex={66}>\n                <Chip label={hand} />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Button disabled={!onSit} onClick={() => onSit(index)}>\n            Sit\n          </Button>\n        )}\n      </Flex>\n      {cards && <Cards big={isClient || showCards} cards={cards} />}\n    </Flex>\n  )\n}\n\nfunction Cards({ big, cards }) {\n  const yOffset = getIsSmall() ? 50 : 40\n  const scale = big ? 1 : 0.7\n  return (\n    <Box\n      position=\"absolute\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      zIndex={1}\n      width={120}\n      height={130}\n      bottom={33}\n      overflow=\"hidden\"\n    >\n      {cards.map((card, i) => (\n        <Box key={`card-${i}`} width={i === 0 ? 17 : null}>\n          <Card\n            key={i}\n            card={card}\n            scale={\n              getIsSmall() ? scale * 0.9 : scale * (getIsLarge() ? 1.5 : 1)\n            }\n            y={yOffset}\n            style={{ position: 'relative', zIndex: big ? 10 : 1 }}\n          />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nfunction TimeChip({ time }) {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width={30}\n      height={30}\n      borderRadius={15}\n      position=\"absolute\"\n      right={-20}\n      style={{\n        zIndex: 300,\n        boxShadow: 'rgba(0,0,0,0.5) 0px 0px 3px',\n        backgroundColor: 'white',\n        color: 'green',\n      }}\n    >\n      {time}\n    </Box>\n  )\n}\n\nfunction DealerChip() {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width={30}\n      height={30}\n      borderRadius={15}\n      position=\"absolute\"\n      right={-20}\n      style={{\n        zIndex: 300,\n        boxShadow: 'rgba(0,0,0,0.5) 0px 0px 3px',\n        backgroundColor: 'white',\n        color: 'green',\n      }}\n    >\n      D\n    </Box>\n  )\n}\n\nconst COLORS = [\n  '#0071AA',\n  '#ECE4B7',\n  '#E8C340',\n  '#D33830',\n  '#A06033',\n  '#EA9438',\n  '#E27C81',\n  '#7FC12E',\n  '#525252',\n  '#AA5BAF',\n]\n","import React from 'react'\nimport { Seat } from './Seat'\nimport { Card } from './Card'\nimport { Flex, Chips } from '.'\nimport { getHandLabel, getIsLarge } from '../utils'\nimport { Box } from '@material-ui/core'\n\nconst Table = ({ pot, layout, room, cards, onSit, players }) => {\n  const getPlayer = i =>\n    players\n      .map(p => ({\n        ...p,\n        hand: getHandLabel(p, cards),\n        isClient: p.id === room.sessionId,\n      }))\n      .find(p => p.seatIndex === i)\n\n  return (\n    <Flex\n      variant=\"column justify-between\"\n      width=\"100%\"\n      maxWidth={1100}\n      maxHeight={500}\n    >\n      <Flex>\n        {document.documentElement.clientHeight > 350 &&\n          document.documentElement.clientWidth > 400 && <Flex />}\n        {layout[0].map(n => (\n          <Seat\n            key={`seat-${n}`}\n            index={n}\n            getPlayer={getPlayer}\n            onSit={onSit}\n          />\n        ))}\n        {document.documentElement.clientHeight > 350 &&\n          document.documentElement.clientWidth > 400 && <Flex />}\n      </Flex>\n\n      <Flex flex={2}>\n        {layout[1].length > 0 && (\n          <Flex variant=\"column\">\n            {layout[1].map(n => (\n              <Seat\n                key={`seat-${n}`}\n                index={n}\n                getPlayer={getPlayer}\n                onSit={onSit}\n              />\n            ))}\n          </Flex>\n        )}\n\n        <Flex\n          variant=\"column center\"\n          minHeight={document.documentElement.clientWidth < 500 ? 350 : 0}\n          flex={2}\n        >\n          <Box\n            minHeight={100}\n            minWidth={150}\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n          >\n            {document.documentElement.clientHeight <= 400 && pot > 0 && (\n              <Box zIndex={99}>\n                <Chips amount={pot} />\n              </Box>\n            )}\n            {cards.map((card, i) => (\n              <Card\n                key={card.index}\n                card={card}\n                scale={getIsLarge() ? 1.4 : 1}\n                style={{ margin: getIsLarge() ? 20 : 5 }}\n              />\n            ))}\n          </Box>\n          {document.documentElement.clientHeight > 350 &&\n            document.documentElement.clientWidth > 400 &&\n            pot > 0 && (\n              <Box mt={1} zIndex={99}>\n                <Chips amount={pot} />\n              </Box>\n            )}\n        </Flex>\n\n        {layout[2].length > 0 && (\n          <Flex variant=\"column\">\n            {layout[2].map(n => (\n              <Seat\n                key={`seat-${n}`}\n                index={n}\n                getPlayer={getPlayer}\n                onSit={onSit}\n              />\n            ))}\n          </Flex>\n        )}\n      </Flex>\n\n      <Flex>\n        {document.documentElement.clientHeight > 350 &&\n          document.documentElement.clientWidth > 400 && <Flex />}\n        {layout[3].map(n => (\n          <Seat\n            key={`seat-${n}`}\n            index={n}\n            getPlayer={getPlayer}\n            onSit={onSit}\n          />\n        ))}\n        {document.documentElement.clientHeight > 350 &&\n          document.documentElement.clientWidth > 400 && <Flex />}\n      </Flex>\n    </Flex>\n  )\n}\nexport default Table\n","import React, { useEffect, useState } from 'react'\nimport Table from './Table'\nimport { getIsPortrait } from '../utils'\n\nexport function Room({ pot = 0, players, room, cards }) {\n  const [portrait, setPortrait] = useState(getIsPortrait())\n  const currentPlayer = players.find(p => p.id === room.sessionId) || {}\n  const seatedPlayers = players\n    .filter(p => p.seatIndex !== -1)\n    .map(p => ({ ...p, isClient: p.id === room.sessionId }))\n    .sort((a, b) => a.seatIndex - b.seatIndex)\n\n  const onSit =\n    currentPlayer.seatIndex === -1\n      ? seatIndex => room.send({ action: 'sit', seatIndex })\n      : null\n\n  useEffect(() => {\n    const callback = () => setPortrait(getIsPortrait())\n    window.addEventListener('resize', callback)\n    return () => window.removeEventListener('resize', callback)\n  }, [])\n\n  return (\n    <Table\n      layout={\n        document.documentElement.clientHeight <= 320\n          ? currentPlayer.seatIndex >= 4\n            ? SMALL_2\n            : SMALL\n          : portrait\n          ? PORTRAIT\n          : LANDSCAPE\n      }\n      cards={cards}\n      onSit={onSit}\n      room={room}\n      pot={pot}\n      currentPlayer={currentPlayer}\n      players={seatedPlayers}\n    />\n  )\n}\n\nconst PORTRAIT = [\n  [0, 1],\n  [9, 8, 7],\n  [2, 3, 4],\n  [6, 5],\n]\n\nconst LANDSCAPE = [\n  [0, 1, 2],\n  [9, 8],\n  [3, 4],\n  [7, 6, 5],\n]\nconst SMALL = [[0, 1, 2, 3, 4], [], [], [9, 8, 7, 6, 5]]\nconst SMALL_2 = [[9, 8, 7, 6, 5], [], [], [0, 1, 2, 3, 4]]\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { Box, Typography, Button, TextField } from '@material-ui/core'\nimport { saveRoom, joinRoomWithReconnect } from '../utils'\nimport { Flex } from '.'\nimport faker from 'faker'\nimport truncate from 'lodash/truncate'\n\nconst AUTOCONNECT = true\n\nexport function Lobby({ setRoom }) {\n  const [availableRooms, setAvailableRooms] = useState([])\n  const [name, setName] = useState(\n    localStorage.getItem('name') || faker.name.firstName(),\n  )\n  const intervalRef = useRef()\n  const autoConnectAttempted = useRef(false)\n\n  const createRoom = useCallback(\n    async name => {\n      const roomName = prompt('Room name?')\n      if (!roomName) return\n      \n      const room = await window.colyseus.create('poker', { roomName })\n      saveRoom(room, name)\n      room.send({ action: 'setName', name })\n      room.send({ action: 'sit' })\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const joinRoom = useCallback(\n    async (roomId, name) => {\n      const room = await joinRoomWithReconnect(roomId)\n      if (!room) {\n        alert('Failed to join room')\n        return\n      }\n      saveRoom(room, name)\n      room.send({ action: 'setName', name })\n      room.send({ action: 'sit' })\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const getAvailableRooms = useCallback(async () => {\n    const rooms = await window.colyseus.getAvailableRooms()\n    setAvailableRooms(rooms)\n  }, [])\n\n  useEffect(() => {\n    getAvailableRooms()\n    intervalRef.current = setInterval(getAvailableRooms, 3000)\n    return () => clearInterval(intervalRef.current)\n  }, [getAvailableRooms])\n\n  useEffect(() => {\n    if (availableRooms) {\n      const lastRoom = availableRooms.find(room =>\n        localStorage.getItem(room.roomId),\n      )\n\n      if (AUTOCONNECT && lastRoom && !autoConnectAttempted.current) {\n        autoConnectAttempted.current = true\n        joinRoom(lastRoom.roomId, name)\n      }\n    }\n  }, [availableRooms, joinRoom, name])\n\n  return (\n    <Flex variant=\"column center\" style={{ height: '100vh' }}>\n      <TextField\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={e =>\n          setName(truncate(e.target.value, { length: 10, omission: '' }))\n        }\n        style={{ marginBottom: 20 }}\n      />\n\n      <Typography variant=\"h5\">Available Tables:</Typography>\n\n      <Flex flex={0} variant=\"column center\" style={{ minHeight: 200 }}>\n        {availableRooms.length === 0 && <EmptyState />}\n\n        {availableRooms.map(room => (\n          <RoomListItem\n            key={room.roomId}\n            room={room}\n            onClick={() => joinRoom(room.roomId, name)}\n          />\n        ))}\n      </Flex>\n\n      <Button variant=\"contained\" onClick={() => createRoom(name)}>\n        Create room\n      </Button>\n    </Flex>\n  )\n}\n\nconst RoomListItem = ({ room, onClick }) => (\n  <Box>\n    <Typography\n      style={{ cursor: 'pointer', textDecoration: 'underline' }}\n      onClick={onClick}\n    >\n      {room.metadata.roomName || room.roomId}\n    </Typography>\n  </Box>\n)\n\nconst EmptyState = () => <Typography>No rooms available</Typography>\n","import React, { useState, useEffect } from 'react'\nimport { Actions } from './Actions'\nimport { Room } from './Room'\nimport { Lobby } from './Lobby'\nimport { Flex } from './index'\nimport { maskCards } from '../utils'\nimport '../assets/card.css'\n\nfunction App() {\n  const [room, setRoom] = useState()\n  const [cards, setCards] = useState([])\n  const [players, setPlayers] = useState([])\n  const [currentTurn, setCurrentTurn] = useState()\n  const [currentBet, setCurrentBet] = useState(0)\n  const [blind, setBlind] = useState(0)\n  const [pot, setPot] = useState()\n\n  useEffect(() => {\n    if (!room) return\n\n    room.onLeave(() => {\n      setRoom(null)\n      setPlayers([])\n      setCurrentTurn()\n      setCards([])\n    })\n\n    room.state.onChange = changes =>\n      changes.forEach(({ field, value }) => {\n        if (field === 'cards') {\n          setCards(value.toJSON())\n        } else if (field === 'currentTurn') {\n          setCurrentTurn(value)\n        } else if (field === 'pot') {\n          setPot(value)\n        } else if (field === 'blind') {\n          setBlind(value)\n        } else if (field === 'currentBet') {\n          setCurrentBet(value)\n        } else if (field === 'players') {\n          setPlayers(value.toJSON().map(p => maskCards(p, room.sessionId)))\n        }\n      })\n  }, [room])\n\n  if (!room) {\n    return <Lobby setRoom={setRoom} />\n  }\n\n  // console.log({ pot, cards, players, currentTurn })\n\n  return (\n    <Flex\n      variant=\"column center\"\n      overflow=\"hidden\"\n      style={{\n        width:\n          document.documentElement.clientWidth > 500\n            ? 'calc(100vw - 20px)'\n            : '100vw',\n        height: 'calc(100vh - 60px)',\n        padding:\n          document.documentElement.clientWidth > 500 ? '30px 10px' : '30px 0',\n      }}\n    >\n      <Room pot={pot} room={room} cards={cards} players={players} />\n      <Actions\n        room={room}\n        blind={blind}\n        currentBet={currentBet}\n        currentTurn={currentTurn}\n        players={players}\n      />\n    </Flex>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Client } from 'colyseus.js'\n\nwindow.colyseus = new Client(\n  process.env.NODE_ENV === 'production'\n    ? 'wss://daniel-poker.onrender.com'\n    : 'ws://localhost:3553',\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}