{"version":3,"sources":["components/index.js","components/Actions.js","components/Card.js","utils.js","components/Seat.js","components/Table.js","components/Room.js","components/Lobby.js","components/App.js","index.js"],"names":["Flex","variant","flex","children","style","passedStyles","props","display","test","flexDirection","justifyContent","alignItems","Box","Chips","amount","Chip","label","numeral","format","toUpperCase","Actions","room","blind","currentTurn","currentBet","players","player","find","p","id","sessionId","canMove","activePlayers","filter","inPlay","numPlayers","seatIndex","length","canDeal","dealer","canStand","sendAction","action","rest","send","BottomActions","betAmount","position","top","left","right","zIndex","Button","onClick","localStorage","removeItem","leave","Action","margin","autoDeal","autoCheck","useEffect","money","setTimeout","bottom","disabled","bet","SUITS","Card","card","x","y","scale","classes","value","suit","className","join","transform","joinRoomWithReconnect","roomId","a","getItem","window","colyseus","reconnect","joinById","saveRoom","name","setItem","getIsSmall","document","documentElement","clientWidth","clientHeight","VALUES","getHandLabel","cards","cardsString","map","c","hand","concat","Hand","solve","descr","getIsPortrait","Seat","onSit","getPlayer","index","remainingConnectionTime","remainingMoveTime","connected","isTurn","isClient","winner","showCards","backgroundColor","mx","borderRadius","minWidth","py","border","COLORS","Typography","fontSize","textAlign","fontWeight","DealerChip","TimeChip","time","Cards","big","yOffset","i","key","width","height","boxShadow","color","Table","pot","layout","maxWidth","maxHeight","n","minHeight","flexWrap","Room","useState","portrait","setPortrait","currentPlayer","seatedPlayers","sort","b","callback","addEventListener","removeEventListener","SMALL_2","SMALL","PORTRAIT","LANDSCAPE","Lobby","setRoom","availableRooms","setAvailableRooms","faker","firstName","setName","intervalRef","useRef","autoConnectAttempted","createRoom","useCallback","roomName","prompt","create","joinRoom","alert","getAvailableRooms","rooms","current","setInterval","clearInterval","lastRoom","TextField","placeholder","onChange","e","truncate","target","omission","marginBottom","RoomListItem","cursor","textDecoration","metadata","EmptyState","App","setCards","setPlayers","setCurrentTurn","setCurrentBet","setBlind","setPot","onLeave","state","changes","forEach","field","toJSON","console","log","overflow","padding","Client","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.68bd5b68.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, Chip } from '@material-ui/core'\nimport numeral from 'numeral'\n\nexport const Flex = ({\n  variant,\n  flex = 1,\n  children,\n  style: passedStyles = {},\n  ...props\n}) => {\n  let style = { display: 'flex', flex }\n\n  if (/column/.test(variant)) {\n    style.flexDirection = 'column'\n  }\n\n  if (/justify-between/.test(variant)) {\n    style.justifyContent = 'space-between'\n  }\n\n  if (/align-center/.test(variant)) {\n    style.alignItems = 'center'\n  } else if (/justify-center/.test(variant)) {\n    style.justifyContent = 'center'\n  } else if (/center/.test(variant)) {\n    style.justifyContent = 'center'\n    style.alignItems = 'center'\n  }\n\n  return (\n    <Box style={{ ...style, ...passedStyles }} {...props}>\n      {children}\n    </Box>\n  )\n}\n\nexport function Chips({ amount, ...props }) {\n  return (\n    <Chip\n      {...props}\n      label={numeral(amount)\n        .format('(0[.]00a)')\n        .toUpperCase()}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Button } from '@material-ui/core'\nimport { Flex } from './'\n\nexport function Actions({ room, blind, currentTurn, currentBet, players }) {\n  const player = players.find(p => p.id === room.sessionId) || {}\n  const canMove = currentTurn === room.sessionId\n  const activePlayers = players.filter(p => p.inPlay)\n  const numPlayers = players.filter(p => p.seatIndex > -1).length\n  const canDeal = player.dealer && numPlayers >= 2 && activePlayers.length === 0\n  const canStand = player.seatIndex !== -1\n  const sendAction = (action, rest = {}) => room.send({ action, ...rest })\n\n  return (\n    <>\n      {(canMove || canDeal) && (\n        <BottomActions\n          canDeal={canDeal}\n          currentBet={currentBet}\n          betAmount={blind * 2}\n          player={player}\n          sendAction={sendAction}\n          canMove={canMove}\n        />\n      )}\n\n      <Flex\n        flex={0}\n        justifyContent=\"flex-end\"\n        position=\"fixed\"\n        top={10}\n        left={0}\n        right={0}\n        zIndex={100}\n      >\n        <Button\n          onClick={() => {\n            if (canStand) {\n              sendAction('stand')\n            } else {\n              localStorage.removeItem(room.id)\n              room.leave()\n            }\n          }}\n        >\n          {canStand ? 'Stand' : 'Leave'}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nconst Action = ({ variant = 'contained', ...props }) => (\n  <Button variant={variant} {...props} style={{ margin: 8 }} />\n)\n\nfunction BottomActions({\n  canDeal,\n  sendAction,\n  currentBet = 0,\n  player,\n  canMove,\n  betAmount,\n  autoDeal = false,\n  autoCheck = false,\n}) {\n  useEffect(() => {\n    if (canDeal && autoDeal) {\n      sendAction('deal')\n    }\n  }, [canDeal, sendAction, autoDeal])\n\n  useEffect(() => {\n    if (player.money === 0 && currentBet === 0 && autoCheck) {\n      setTimeout(() => {\n        sendAction('check')\n      }, 500)\n    }\n  }, [player, autoCheck, sendAction, currentBet])\n\n  return (\n    <Flex\n      flex={0}\n      variant=\"justify-center\"\n      position=\"fixed\"\n      bottom={10}\n      left={0}\n      right={0}\n    >\n      {canDeal ? (\n        <>\n          <Action disabled={!canDeal} onClick={() => sendAction('deal')}>\n            Deal\n          </Action>\n        </>\n      ) : (\n        <>\n          <Action\n            disabled={!canMove}\n            onClick={() =>\n              sendAction(currentBet > player.bet ? 'fold' : 'check')\n            }\n          >\n            {currentBet > player.bet ? 'Fold' : 'Check'}\n          </Action>\n          <Action\n            disabled={\n              !canMove ||\n              player.money + player.bet < currentBet ||\n              currentBet === player.bet\n            }\n            onClick={() => sendAction('call')}\n          >\n            Call\n          </Action>\n          <Action\n            disabled={\n              !canMove || player.money + player.bet < currentBet + betAmount\n            }\n            onClick={() =>\n              sendAction('bet', { amount: currentBet + betAmount })\n            }\n          >\n            {currentBet > 0 ? 'Raise' : 'Bet'}\n          </Action>\n        </>\n      )}\n    </Flex>\n  )\n}\n","import React from 'react'\nconst SUITS = ['spades', 'clubs', 'hearts', 'diamonds']\n\nexport const Card = ({ card, x = 0, y = 0, scale = 1, style = {} }) => {\n  const classes = [\n    'card',\n    card && `rank${card.value}`,\n    !card.value && 'finished',\n    card && SUITS[card.suit],\n  ]\n\n  return (\n    <div\n      className={classes.join(' ')}\n      style={{\n        transform: `translate3d(${x}px, ${y}px, 0px) scale(${scale})`,\n        ...style,\n      }}\n    >\n      <div className=\"face\" />\n      <div className=\"back\" />\n    </div>\n  )\n}\n","import { Hand } from 'pokersolver'\n\nexport const maskCards = (player, id) => ({\n  ...player,\n  // TODO: hide cards from server\n  cards:\n    player.id === id || player.showCards\n      ? player.cards\n      : player.cards.map(c => ({})),\n})\n\nexport const joinRoomWithReconnect = async roomId => {\n  let room,\n    sessionId = localStorage.getItem(roomId)\n\n  if (sessionId) {\n    try {\n      room = await window.colyseus.reconnect(roomId, sessionId)\n    } catch (e) {}\n  }\n\n  room = room || (await window.colyseus.joinById(roomId))\n\n  return room\n}\n\nexport const saveRoom = (room, name) => {\n  localStorage.setItem('name', name)\n  localStorage.setItem(room.id, room.sessionId)\n}\n\nexport const getIsSmall = () =>\n  document.documentElement.clientWidth <= 500 ||\n  document.documentElement.clientHeight <= 500\n\nexport const SUITS = ['s', 'c', 'h', 'd']\nexport const VALUES = [\n  0,\n  'A',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '10',\n  'J',\n  'Q',\n  'K',\n]\n\nexport const getHandLabel = (player, cards) => {\n  if (cards.length === 0) {\n    return ''\n  }\n  const cardsString = cards.map(c => `${VALUES[c.value]}${SUITS[c.suit]}`)\n  const hand = player.cards\n    .map(c => `${VALUES[c.value]}${SUITS[c.suit]}`)\n    .concat(cardsString)\n  const value = Hand.solve(hand)\n  return value.descr\n}\n\nexport const getIsPortrait = () =>\n  document.documentElement.clientWidth < document.documentElement.clientHeight\n","import React from 'react'\nimport { Card } from './Card'\nimport { Button, Box, Typography, Chip } from '@material-ui/core'\nimport { Flex, Chips } from '.'\nimport { getIsSmall } from '../utils'\nimport numeral from 'numeral'\n\nexport const Seat = ({ onSit, getPlayer, index, style = {} }) => {\n  const player = getPlayer(index) || {}\n  const {\n    id,\n    remainingConnectionTime,\n    remainingMoveTime,\n    connected,\n    isTurn,\n    isClient,\n    name,\n    winner,\n    inPlay,\n    bet = 0,\n    money,\n    hand,\n    showCards,\n    cards,\n    dealer,\n  } = player\n\n  let backgroundColor = '#54b786'\n  if (isTurn) {\n    backgroundColor = '#8dd2b0'\n  }\n  if (id && !connected) {\n    backgroundColor = '#d86e6e'\n  }\n  if (winner) {\n    backgroundColor = '#00fff3'\n  }\n\n  return (\n    <Flex position=\"relative\" variant=\"center\">\n      <Flex\n        flex={0}\n        mx={1}\n        variant=\"center\"\n        borderRadius={12}\n        minWidth={document.documentElement.clientWidth < 400 ? 64 : 83}\n        position=\"relative\"\n        py={1}\n        style={{\n          border: `3px solid ${COLORS[index]}`,\n          backgroundColor,\n          zIndex: 10,\n          ...style,\n        }}\n      >\n        {id ? (\n          <>\n            <Flex variant=\"column center\">\n              <Typography\n                style={{\n                  fontSize: isClient ? 14 : 12,\n                  textAlign: 'center',\n                  fontWeight: isClient ? 'bold' : 'normal',\n                }}\n              >\n                {name || id}\n              </Typography>\n              <Typography style={{ fontSize: 12 }}>\n                $\n                {numeral(money)\n                  .format('(0[.]00a)')\n                  .toUpperCase()}\n              </Typography>\n            </Flex>\n\n            {bet > 0 && (\n              <Box position=\"absolute\" bottom={-25} zIndex={99}>\n                <Chips amount={bet} />\n              </Box>\n            )}\n\n            {dealer && <DealerChip />}\n            {isTurn && (\n              <TimeChip\n                time={!connected ? remainingConnectionTime : remainingMoveTime}\n              />\n            )}\n\n            {inPlay && bet <= 0 && showCards && hand && (\n              <Box position=\"absolute\" bottom={-23} zIndex={66}>\n                <Chip label={hand} />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Button disabled={!onSit} onClick={() => onSit(index)}>\n            Sit\n          </Button>\n        )}\n      </Flex>\n      {cards && <Cards big={isClient || showCards} cards={cards} />}\n    </Flex>\n  )\n}\n\nfunction Cards({ big, cards }) {\n  const yOffset = getIsSmall() ? -15 : -20\n  const scale = big ? 1 : 0.7\n  return (\n    <Box position=\"absolute\" display=\"flex\" justifyContent=\"center\" zIndex={1}>\n      {cards.map((card, i) => (\n        <Box key={`card-${i}`} width={i === 0 ? 15 : null}>\n          <Card\n            key={i}\n            card={card}\n            scale={getIsSmall() ? scale * 0.9 : scale}\n            y={yOffset}\n            style={{ position: 'relative', zIndex: big ? 10 : 1 }}\n          />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nfunction TimeChip({ time }) {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width={30}\n      height={30}\n      borderRadius={15}\n      position=\"absolute\"\n      right={-20}\n      style={{\n        zIndex: 300,\n        boxShadow: 'rgba(0,0,0,0.5) 0px 0px 3px',\n        backgroundColor: 'white',\n        color: 'green',\n      }}\n    >\n      {time}\n    </Box>\n  )\n}\n\nfunction DealerChip() {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width={30}\n      height={30}\n      borderRadius={15}\n      position=\"absolute\"\n      right={-20}\n      style={{\n        zIndex: 300,\n        boxShadow: 'rgba(0,0,0,0.5) 0px 0px 3px',\n        backgroundColor: 'white',\n        color: 'green',\n      }}\n    >\n      D\n    </Box>\n  )\n}\n\nconst COLORS = [\n  '#0071AA',\n  '#ECE4B7',\n  '#E8C340',\n  '#D33830',\n  '#A06033',\n  '#EA9438',\n  '#E27C81',\n  '#7FC12E',\n  '#525252',\n  '#AA5BAF',\n]\n","import React from 'react'\nimport { Seat } from './Seat'\nimport { Card } from './Card'\nimport { Flex, Chips } from '.'\nimport { getIsSmall, getHandLabel } from '../utils'\nimport { Box } from '@material-ui/core'\n\nconst Table = ({ pot, layout, room, cards, onSit, players }) => {\n  const getPlayer = i =>\n    players\n      .map(p => ({\n        ...p,\n        hand: getHandLabel(p, cards),\n        isClient: p.id === room.sessionId,\n      }))\n      .find(p => p.seatIndex === i)\n\n  return (\n    <Flex\n      variant=\"column justify-between\"\n      width=\"100%\"\n      maxWidth={1100}\n      maxHeight={500}\n    >\n      <Flex>\n        {document.documentElement.clientHeight > 400 &&\n          document.documentElement.clientWidth > 500 && <Flex />}\n        {layout[0].map(n => (\n          <Seat\n            key={`seat-${n}`}\n            index={n}\n            getPlayer={getPlayer}\n            onSit={onSit}\n          />\n        ))}\n        {document.documentElement.clientHeight > 400 &&\n          document.documentElement.clientWidth > 500 && <Flex />}\n      </Flex>\n\n      <Flex flex={2}>\n        {layout[1].length > 0 && (\n          <Flex variant=\"column\">\n            {layout[1].map(n => (\n              <Seat\n                key={`seat-${n}`}\n                index={n}\n                getPlayer={getPlayer}\n                onSit={onSit}\n              />\n            ))}\n          </Flex>\n        )}\n\n        <Flex\n          variant=\"column center\"\n          minHeight={document.documentElement.clientWidth < 500 ? 350 : 0}\n          flex={2}\n        >\n          <Box\n            minHeight={100}\n            minWidth={150}\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n          >\n            {document.documentElement.clientHeight <= 400 && pot > 0 && (\n              <Box zIndex={99}>\n                <Chips amount={pot} />\n              </Box>\n            )}\n            {cards.map((card, i) => (\n              <Card\n                key={card.index}\n                card={card}\n                scale={1}\n                style={{ margin: 5 }}\n              />\n            ))}\n          </Box>\n          {document.documentElement.clientHeight > 400 &&\n            document.documentElement.clientWidth > 400 &&\n            pot > 0 && (\n              <Box zIndex={99}>\n                <Chips amount={pot} />\n              </Box>\n            )}\n        </Flex>\n\n        {layout[2].length > 0 && (\n          <Flex variant=\"column\">\n            {layout[2].map(n => (\n              <Seat\n                key={`seat-${n}`}\n                index={n}\n                getPlayer={getPlayer}\n                onSit={onSit}\n              />\n            ))}\n          </Flex>\n        )}\n      </Flex>\n\n      <Flex>\n        {document.documentElement.clientHeight > 400 &&\n          document.documentElement.clientWidth > 500 && <Flex />}\n        {layout[3].map(n => (\n          <Seat\n            key={`seat-${n}`}\n            index={n}\n            getPlayer={getPlayer}\n            onSit={onSit}\n          />\n        ))}\n        {document.documentElement.clientHeight > 400 &&\n          document.documentElement.clientWidth > 500 && <Flex />}\n      </Flex>\n    </Flex>\n  )\n}\nexport default Table\n","import React, { useEffect, useState } from 'react'\nimport Table from './Table'\nimport { getIsPortrait } from '../utils'\n\nexport function Room({ pot = 0, players, room, cards }) {\n  const [portrait, setPortrait] = useState(getIsPortrait())\n  const currentPlayer = players.find(p => p.id === room.sessionId) || {}\n  const seatedPlayers = players\n    .filter(p => p.seatIndex !== -1)\n    .map(p => ({ ...p, isClient: p.id === room.sessionId }))\n    .sort((a, b) => a.seatIndex - b.seatIndex)\n\n  const onSit =\n    currentPlayer.seatIndex === -1\n      ? seatIndex => room.send({ action: 'sit', seatIndex })\n      : null\n\n  useEffect(() => {\n    const callback = () => setPortrait(getIsPortrait())\n    window.addEventListener('resize', callback)\n    return () => window.removeEventListener('resize', callback)\n  }, [])\n\n  return (\n    <Table\n      layout={\n        document.documentElement.clientHeight <= 320\n          ? currentPlayer.seatIndex >= 4\n            ? SMALL_2\n            : SMALL\n          : portrait\n          ? PORTRAIT\n          : LANDSCAPE\n      }\n      cards={cards}\n      onSit={onSit}\n      room={room}\n      pot={pot}\n      currentPlayer={currentPlayer}\n      players={seatedPlayers}\n    />\n  )\n}\n\nconst PORTRAIT = [\n  [0, 1],\n  [9, 8, 7],\n  [2, 3, 4],\n  [6, 5],\n]\n\nconst LANDSCAPE = [\n  [0, 1, 2],\n  [9, 8],\n  [3, 4],\n  [7, 6, 5],\n]\nconst SMALL = [[0, 1, 2, 3, 4], [], [], [9, 8, 7, 6, 5]]\nconst SMALL_2 = [[9, 8, 7, 6, 5], [], [], [0, 1, 2, 3, 4]]\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { Box, Typography, Button, TextField } from '@material-ui/core'\nimport { saveRoom, joinRoomWithReconnect } from '../utils'\nimport { Flex } from '.'\nimport faker from 'faker'\nimport truncate from 'lodash/truncate'\n\nconst AUTOCONNECT = true\n\nexport function Lobby({ setRoom }) {\n  const [availableRooms, setAvailableRooms] = useState([])\n  const [name, setName] = useState(\n    localStorage.getItem('name') || faker.name.firstName(),\n  )\n  const intervalRef = useRef()\n  const autoConnectAttempted = useRef(false)\n\n  const createRoom = useCallback(\n    async name => {\n      const roomName = prompt('Room name?')\n      const room = await window.colyseus.create('poker', { roomName })\n      saveRoom(room, name)\n      room.send({ action: 'setName', name })\n      room.send({ action: 'sit' })\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const joinRoom = useCallback(\n    async (roomId, name) => {\n      const room = await joinRoomWithReconnect(roomId)\n      if (!room) {\n        alert('Failed to join room')\n        return\n      }\n      saveRoom(room, name)\n      room.send({ action: 'setName', name })\n      room.send({ action: 'sit' })\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const getAvailableRooms = useCallback(async () => {\n    const rooms = await window.colyseus.getAvailableRooms()\n    setAvailableRooms(rooms)\n  }, [])\n\n  useEffect(() => {\n    getAvailableRooms()\n    intervalRef.current = setInterval(getAvailableRooms, 3000)\n    return () => clearInterval(intervalRef.current)\n  }, [getAvailableRooms])\n\n  useEffect(() => {\n    if (availableRooms) {\n      const lastRoom = availableRooms.find(room =>\n        localStorage.getItem(room.roomId),\n      )\n\n      if (AUTOCONNECT && lastRoom && !autoConnectAttempted.current) {\n        autoConnectAttempted.current = true\n        joinRoom(lastRoom.roomId, name)\n      }\n    }\n  }, [availableRooms, joinRoom, name])\n\n  return (\n    <Flex variant=\"column center\" style={{ height: '100vh' }}>\n      <TextField\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={e =>\n          setName(truncate(e.target.value, { length: 10, omission: '' }))\n        }\n        style={{ marginBottom: 20 }}\n      />\n\n      <Typography variant=\"h5\">Available Tables:</Typography>\n\n      <Flex flex={0} variant=\"column center\" style={{ minHeight: 200 }}>\n        {availableRooms.length === 0 && <EmptyState />}\n\n        {availableRooms.map(room => (\n          <RoomListItem\n            key={room.roomId}\n            room={room}\n            onClick={() => joinRoom(room.roomId, name)}\n          />\n        ))}\n      </Flex>\n\n      <Button variant=\"contained\" onClick={() => createRoom(name)}>\n        Create room\n      </Button>\n    </Flex>\n  )\n}\n\nconst RoomListItem = ({ room, onClick }) => (\n  <Box>\n    <Typography\n      style={{ cursor: 'pointer', textDecoration: 'underline' }}\n      onClick={onClick}\n    >\n      {room.metadata.roomName || room.roomId}\n    </Typography>\n  </Box>\n)\n\nconst EmptyState = () => <Typography>No rooms available</Typography>\n","import React, { useState, useEffect } from 'react'\nimport { Actions } from './Actions'\nimport { Room } from './Room'\nimport { Lobby } from './Lobby'\nimport { Flex } from './index'\nimport { maskCards } from '../utils'\nimport '../assets/card.css'\n\nfunction App() {\n  const [room, setRoom] = useState()\n  const [cards, setCards] = useState([])\n  const [players, setPlayers] = useState([])\n  const [currentTurn, setCurrentTurn] = useState()\n  const [currentBet, setCurrentBet] = useState(0)\n  const [blind, setBlind] = useState(0)\n  const [pot, setPot] = useState()\n\n  useEffect(() => {\n    if (!room) return\n\n    room.onLeave(() => {\n      setRoom(null)\n      setPlayers([])\n      setCurrentTurn()\n      setCards([])\n    })\n\n    room.state.onChange = changes =>\n      changes.forEach(({ field, value }) => {\n        if (field === 'cards') {\n          setCards(value.toJSON())\n        } else if (field === 'currentTurn') {\n          setCurrentTurn(value)\n        } else if (field === 'pot') {\n          setPot(value)\n        } else if (field === 'blind') {\n          setBlind(value)\n        } else if (field === 'currentBet') {\n          setCurrentBet(value)\n        } else if (field === 'players') {\n          setPlayers(value.toJSON().map(p => maskCards(p, room.sessionId)))\n        }\n      })\n  }, [room])\n\n  if (!room) {\n    return <Lobby setRoom={setRoom} />\n  }\n\n  console.log({ pot, cards, players, currentTurn })\n\n  return (\n    <Flex\n      variant=\"column center\"\n      overflow=\"hidden\"\n      style={{\n        width:\n          document.documentElement.clientWidth > 400\n            ? 'calc(100vw - 20px)'\n            : '100vw',\n        height: 'calc(100vh - 60px)',\n        padding:\n          document.documentElement.clientWidth > 400 ? '30px 10px' : '30px 0',\n      }}\n    >\n      <Room pot={pot} room={room} cards={cards} players={players} />\n      <Actions\n        room={room}\n        blind={blind}\n        currentBet={currentBet}\n        currentTurn={currentTurn}\n        players={players}\n      />\n    </Flex>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Client } from 'colyseus.js'\n\nwindow.colyseus = new Client(\n  process.env.NODE_ENV === 'production'\n    ? 'ws://daniel-poker.herokuapp.com'\n    : 'ws://localhost:3553',\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}